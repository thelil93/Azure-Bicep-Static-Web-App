name: template-spec-static-web-app
on:
  workflow_dispatch:
  push:
    branches:
      - mastercard

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCEGROUP_NAME: templateSpecs
  AZURE_REGION: westeurope
  TEMPLATE_SPEC_NAME: static-web-app
  TEMPLATE_SPEC_FILE_PATH: staticWebAppDeployment.bicep
  TEMPLATE_METADATA_FILE_PATH: metadata.json
  TESTENV_TEMPLATE_FILE_PATH: staticWebAppDeployment.json

jobs:
  TEST:
    runs-on: ubuntu-latest
    environment: test
    outputs: 
      statusoutput: ${{ steps.runtests.outputs.status }}
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.TESTENV_AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.TESTENV_AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.TESTENV_AZURE_SUBSCRIPTION_ID }}
    - name: Run Bicep linter
      run: az bicep build --file ${{ env.TEMPLATE_SPEC_FILE_PATH }}
    - name: Deploy to test environment
      uses: azure/arm-deploy@v1
      with:
        deploymentName: ${{ github.run_number }}
        scope: subscription
        region: ${{ vars.AZURE_LOCATION }}
        template: ${{ env.TESTENV_TEMPLATE_FILE_PATH }}
        parameters: paramCustomDomain=${{ vars.CUSTOM_DOMAIN }} paramSubDomain=${{ vars.SUB_DOMAIN }} paramSiteName=${{ vars.SITE_NAME }} paramEnvironment=${{ vars.ENVIRONMENT_NAME }} paramLocation=${{ vars.AZURE_LOCATION }} paramRepositoryToken=${{ secrets.TESTENV_REPO_PAT }} paramRepositoryUrl=${{ vars.REPO_URL }} paramApiLocation=" " paramAppArtifactLocation=public paramAppLocation=/ paramRepositoryBranch=main paramSku=Free paramSkuCode=Free
    - name: Get static site URL and set variable
      run: |
        url=$(az staticwebapp show --name ${{ vars.DEPLOYED_APP }}  --query "defaultHostname")
        echo "TEST_URL=$url" >> $GITHUB_ENV
    - name: Run tests
      id: runtests
      run: |
        statuscode=$(curl -LI https://${{ env.TEST_URL }} -o /dev/null -w '%{http_code}\n' -s)
        echo "STATUS CODE: $statuscode"
        echo "status=$statuscode" >> $GITHUB_OUTPUT
    - name: Delete resources
      run: az group delete --name ${{ vars.DEPLOYED_RG }} --yes
  
  PUBLISH:
    if: needs.TEST.outputs.statusoutput == '200'
    runs-on: ubuntu-latest
    needs: [ TEST ]
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Get module version number
      run: |
        majorMinorVersionNumber=$(jq '(.version.major | tostring) + "." + (.version.minor | tostring)' ${{ env.TEMPLATE_METADATA_FILE_PATH }} -r )
        versionNumber="$majorMinorVersionNumber.${{ github.run_number }}"
        echo "TEMPLATE_VERSION=$versionNumber" >> $GITHUB_ENV
    - uses: azure/cli@v1
      name: Publish template spec
      with:
        inlineScript: |
          az ts create \
            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
            --name ${{ env.TEMPLATE_SPEC_NAME }} \
            --version ${{ env.TEMPLATE_VERSION }} \
            --template-file ${{ env.TEMPLATE_SPEC_FILE_PATH }} \
            --location ${{ env.AZURE_REGION }} \
            --yes